bindsym {

	# meta
	$mod+Shift+e exec '[ "$(printf "%s\n" no yes | bemenu -p "exit sway? ")" = yes ] && swaymsg exit'
	$mod+Control+e reload
	$mod+Shift+c exec notify-send 'Deprecated binding!' 'Use Super+Ctrl+e to reload sway config.'

	# closing windows
	$mod+Escape kill
	Mod1+F4 kill
	button2 kill

	# input
	$mod+backslash input * xkb_variant ""
	$mod+Shift+backslash input * xkb_variant colemak

	# launcher
	$mod+Space exec dmenu_path | bemenu -i -p 'run what? ' | xargs swaymsg exec --
	$mod+Shift+b exec find ~/wp -type f | bemenu -i -p 'which background? ' | xargs -I : swaymsg output '*' background : fill #222222
	$mod+F12 exec scrcpy -s "$(adb devices | awk 'NR==2 {print $1}')" --stay-awake --turn-screen-off --shortcut-mod lctrl
	$mod+Shift+F12 exec sh ~/.config/sway/scripts/scrcpy_resize/scrcpy_resize.sh

	# notifications
	$mod+F1 exec systemctl --user restart pomodoro.timer

	# launch shortcuts
	$mod+Shift+Space exec $term
	$mod+F5 exec networkmanager_dmenu
	$mod+Shift+F5 exec nm-connection-editor
	$mod+Mod1+Delete exec pkill -USR1 swayidle
	XF86ScreenSaver exec pkill -USR1 swayidle
	$mod+Return exec $browser
	$mod+Shift+Return exec $browser --private-window
	XF86Launch1 exec $browser
	$mod+colon exec $browser --new-window https://calendar.google.com/calendar/r

	# clipboard
	$mod+c exec $clipman_path pick --tool=bemenu --tool-args='--index=1 --wrap'
	$mod+Control+c exec sh ~/.config/sway/scripts/clipman.sh '$clipman_path'
	$mod+Mod1+c exec $clipman_path clear --tool=bemenu
	$mod+Shift+Mod1+c exec $clipman_path clear -a; exec notify-send --expire-time=3000 clipman 'Clipboard history cleared!'
	F1 exec wtype -M ctrl -k c -m ctrl
	F2 exec wtype -M ctrl -k a -k c -m ctrl
	F3 exec wtype -M ctrl -k a -k v -m ctrl
	F4 exec sh ~/.config/sway/scripts/clipman.sh; mode default

	--release {

		# screenshot the focused window
		Print			exec sh ~/.config/sway/scripts/screenshot/screenshot.sh --focused window
		Shift+Print		exec sh ~/.config/sway/scripts/screenshot/screenshot.sh --focused window --animated

		# choose a window (click) or region (drag) and take a screenshot
		Control+Print		exec sh ~/.config/sway/scripts/screenshot/screenshot.sh --region
		Control+Shift+Print	exec sh ~/.config/sway/scripts/screenshot/screenshot.sh --region --animated

		# screenshot the focused monitor
		$mod+Print		exec sh ~/.config/sway/scripts/screenshot/screenshot.sh --focused monitor
		$mod+Shift+Print	exec sh ~/.config/sway/scripts/screenshot/screenshot.sh --focused monitor --animated

		# show the latest screenshot
		Mod1+Print		exec sh ~/.config/sway/scripts/screenshot/show_latest.sh --extension png
		Mod1+Shift+Print	exec sh ~/.config/sway/scripts/screenshot/show_latest.sh --extension gif
	}

	# window focus
	$mod+$left focus left
	$mod+$down focus down
	$mod+$up focus up
	$mod+$right focus right
	$mod+Left focus left
	$mod+Down focus down
	$mod+Up focus up
	$mod+Right focus right

	--whole-window --input-device=type:pointer {
		button6 focus left
		button7 focus right
	}

	Mod1+tab focus output right

	# window move
	$mod+Shift+$left move left
	$mod+Shift+$down move down
	$mod+Shift+$up move up
	$mod+Shift+$right move right
	$mod+Shift+Left move left
	$mod+Shift+Down move down
	$mod+Shift+Up move up
	$mod+Shift+Right move right

	# workspace move
	$mod+Mod1+$left move workspace to output left
	$mod+Mod1+$down move workspace to output down
	$mod+Mod1+$up move workspace to output up
	$mod+Mod1+$right move workspace to output right
	$mod+Mod1+Left move workspace to output left
	$mod+Mod1+Down move workspace to output down
	$mod+Mod1+Up move workspace to output up
	$mod+Mod1+Right move workspace to output right

	$mod+1 workspace 1
	$mod+Shift+1 move container to workspace 1

	$mod+2 workspace 2
	$mod+Shift+2 move container to workspace 2

	$mod+3 workspace 3
	$mod+Shift+3 move container to workspace 3

	$mod+4 workspace 4
	$mod+Shift+4 move container to workspace 4

	$mod+5 workspace 5
	$mod+Shift+5 move container to workspace 5

	$mod+6 workspace 6
	$mod+Shift+6 move container to workspace 6

	$mod+7 workspace 7
	$mod+Shift+7 move container to workspace 7

	$mod+8 workspace 8
	$mod+Shift+8 move container to workspace 8

	$mod+9 workspace 9
	$mod+Shift+9 move container to workspace 9

	$mod+0 workspace 10
	$mod+Shift+0 move container to workspace 10

	# layout modes
	$mod+t layout tabbed
	$mod+s layout toggle split

	# child layout modes
	$mod+b splith
	$mod+v splitv

	# fullscreen current window
	$mod+F11 fullscreen

	# floating windows
	$mod+Delete focus floating
	$mod+Insert focus tiling
	$mod+Shift+Delete floating enable; sticky enable
	$mod+Shift+Insert floating disable; sticky disable

	$mod+a focus parent
	$mod+Shift+a focus child

	$mod+Shift+minus move scratchpad

	$mod+minus scratchpad show

	# rotate current monitor
	$mod+Shift+r exec swaymsg output "$(swaymsg --type get_outputs | jq --raw-output '.[] | select(.focused).name')" transform 90 clockwise

	--locked {
		# volume keys
		XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +4%
		XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -4%
		XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
		XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

		# volume key external keyboard aliases
		$mod+Prior exec pactl set-sink-volume @DEFAULT_SINK@ +4%
		$mod+Next exec pactl set-sink-volume @DEFAULT_SINK@ -4%
		$mod+End exec pactl set-sink-mute @DEFAULT_SINK@ toggle
		$mod+Home exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

		# media keys
		XF86AudioPlay exec playerctl play-pause
		XF86AudioPrev exec playerctl previous
		XF86AudioNext exec playerctl next
		$mod+grave exec playerctl play-pause
		$mod+bracketleft exec playerctl previous
		$mod+bracketright exec playerctl next

		# backlight control
		XF86MonBrightnessDown exec light -U 1; exec light -O
		XF86MonBrightnessUp exec light -A 1; exec light -O
		XF86TouchpadToggle input type:touchpad events toggle enabled disabled
	}
}

bindsym $mod+r mode resize
mode resize bindsym {
	Return mode default
	Escape mode default
	$mod+r mode default

	Control+Shift+$left resize shrink width 1px
	Control+Shift+$down resize grow height 1px
	Control+Shift+$up resize shrink height 1px
	Control+Shift+$right resize grow width 1px
	Control+Shift+Left resize shrink width 1px
	Control+Shift+Down resize grow height 1px
	Control+Shift+Up resize shrink height 1px
	Control+Shift+Right resize grow width 1px

	Control+$left resize shrink width 10px
	Control+$down resize grow height 10px
	Control+$up resize shrink height 10px
	Control+$right resize grow width 10px
	Control+Left resize shrink width 10px
	Control+Down resize grow height 10px
	Control+Up resize shrink height 10px
	Control+Right resize grow width 10px

	$left resize shrink width 100px
	$down resize grow height 100px
	$up resize shrink height 100px
	$right resize grow width 100px
	Left resize shrink width 100px
	Down resize grow height 100px
	Up resize shrink height 100px
	Right resize grow width 100px

	Shift+$left resize shrink width 500px
	Shift+$down resize grow height 500px
	Shift+$up resize shrink height 500px
	Shift+$right resize grow width 500px
	Shift+Left resize shrink width 500px
	Shift+Down resize grow height 500px
	Shift+Up resize shrink height 500px
	Shift+Right resize grow width 500px
}

bindsym $mod+asciitilde mode raw
mode raw bindsym {
	$mod+asciitilde mode default
}

bindsym $mod+Shift+V exec makoctl mode -a sway-focus; mode notifications
mode notifications bindsym {
	Escape exec makoctl mode -r sway-focus; mode default
	$mod+Shift+V exec makoctl mode -r sway-focus; mode default

	Return mode default; exec makoctl mode -r sway-focus; exec makoctl invoke; exec makoctl dismiss
	Delete mode default; exec makoctl mode -r sway-focus; exec makoctl dismiss
	Shift+Delete mode default; exec makoctl mode -r sway-focus; exec makoctl dismiss -a
}

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

focus_wrapping no

# disable laptop display when connected to an external monitor (clamshell mode)
# FIXME: disabled because it breaks clamshell sleep when NOT connected to an external monitor
#bindswitch {
	#lid:on output $laptop disable
	#lid:off output $laptop enable
#}
