#!/bin/sh
# configure shell prompts

if [ -n "$BASH_VERSION" ]; then
    # place the prompt on the bottom of the window
    PROMPT_COMMAND='(retval=$?;tput cup "$LINES";exit $retval)'
fi

function __prompt_char() {
    _last_exit=$?

    printf '\n'

    if [ -n "$ZSH_VERSION" ]; then
        # place the prompt on the bottom of the window
        printf '%%{'
        tput cup "$LINES"
        printf '%%}'
    fi

    if [ "$USER_EXPECTED" != "$USER" ]; then
        printf '%%n '
    fi

    if [ $_last_exit -ne 0 ]; then
        printf '!'
    elif ! _in "$PWD" "${GIT_PROMPT_DIRS_BLACKLIST[@]}" && git rev-parse --git-dir >& /dev/null; then
        printf 'Â±'
    elif [ $UID -eq 0 ]; then
        printf '#'
    else
        printf ']'
    fi
}

function __git_prompt() {
    printf ' '

    # ignore blacklisted directories
    _in "$PWD" "${GIT_PROMPT_DIRS_BLACKLIST[@]}" && return

    # ignore non-git directories
    git rev-parse --git-dir >& /dev/null || return

    # unmerged files (red highlight)
    if [ -n "$(git ls-files -u >& /dev/null)" ]; then
        printf '%%F{red}%%S'

    # dirty working dir (red)
    elif ! git diff --quiet >& /dev/null || ! git diff --cached --quiet >& /dev/null; then
        printf '%%F{red}'

    # clean working dir (green)
    else
        printf '%%F{green}'
    fi

    # get branch name or parenthesized message describing where we are
    printf "$(git branch | sed -n '/\* /s:::p')%%f%%s "
}

PS1='$(__prompt_char) '

if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi
PS1='${debian_chroot:+($debian_chroot)}'"$PS1"

if [ -n "$ZSH_VERSION" ]; then
  source "$XDG_CONFIG_HOME/zsh/compinstall"
  source "$XDG_CONFIG_HOME/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
  ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets root)
  source "$XDG_CONFIG_HOME/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
  ZSH_HIGHLIGHT_STYLES[bracket-error]='fg=black,bg=red'
  ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]='underline,bold'

  setopt prompt_subst
  RPS1='%~$(__git_prompt)%F{cyan}%m%f %T'
  autoload bashcompinit
  bashcompinit
  alias _have=hash
  for f in /usr/share/bash-completion/completions/{nordvpn,lxc}; do
    if [ -r "$f" ]; then
        source "$f"
    fi
  done

# bash, most likely
else
  HISTCONTROL=ignoreboth
  HISTSIZE=1000
  HISTFILESIZE=2000

  shopt -s histappend checkwinsize globstar promptvars
  bind -m vi-insert "\C-l":clear-screen
fi

if hash ntfy 2>/dev/null; then
    eval "$(ntfy shell-integration --foreground-too)"
else
    printf 'ntfy not installed!\n'
fi
