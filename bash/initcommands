#!/bin/sh
# initialization command aliases

# OS X is special
uname="$(uname)"
if [[ "$uname" == "Darwin" ]]; then
	alias ls='ls -G'
	alias docker='osxdocker'
elif [[ "$uname" == "Linux" ]]; then
	alias ls='ls --color=auto --group-directories-first'
fi

# safe mv/cp
alias mv="mv -i"
alias cp="cp -i"

# not horrible terminal output
alias screen="screen -T $TERM"

# so dc doesn't round everything
# use \dc if piping input
alias dc="dc -e 10k -"

# colored howdoi
alias howdoi="howdoi -c"

# colored diff
alias diff="diff --color=auto"

# feh uses reasonable defaults
alias feh="feh --draw-filename --scale-down"

# style bemenu to match sway
export BEMENU_OPTS="\
--monitor all \
--line-height 27 \
--list 30 \
--scrollbar autohide \
--width-factor 0.5 \
--tb '#ffffff' \
--tf '#5d5d5d' \
--fb '#5d5d5d' \
--ff '#ffffff' \
--nb '#5d5d5d' \
--nf '#ffffff' \
--hb '#808080' \
--hf '#ffffff' \
--sb '#ffffff' \
--sf '#5d5d5d' \
--scb '#222222' \
--scf '#ffffff' \
"
if hash bemenu 2>/dev/null; then
  bmv="$(bemenu --version)"
  bmv="${bmv##* v}"
  if printf '%s\n' 0.6.8 "$bmv" | sort --version-sort --check=quiet; then
    BEMENU_OPTS="$BEMENU_OPTS\
--ab '#5d5d5d' \
--af '#ffffff' \
"
  fi
fi

# autopep8 ignores the dumber pep8 guidelines
# 501: lines less than 80 characters
#   * dumb because this ain't 1970
# 201-2: every list, comprehension or not, has cozy square brackets
#   * dumb because comprehensions should have breathing room
# 301-3: weird arbitrary rules on newlines
#   * dumb because it's hard to tell '\n' from '\n+'
# the rest of the rules are really good; let's stick to those
alias autopep8="autopep8 --ignore 'E501,E201,E202,E301,E302,E303'"

# suppress python3 version and copyright info in REPL
alias python3="python3 -q"

if [ "$START_SWAY" = true ]; then
    export MOZ_ENABLE_WAYLAND=1
    export GDK_BACKEND=wayland
    export CLUTTER_BACKEND=wayland
    #export QT_PLUGIN_PATH=/usr/lib/qt/plugins
    #export QT_QPA_PLATFORM=wayland
    export QT_QPA_PLATFORM=wayland-egl
    export QT_QPA_PLATFORM_PLUGIN_PATH=/usr/lib/qt/plugins
    export QT_WAYLAND_DISABLE_WINDOWDECORATION=1

# firefox smooth scrolling under Xorg
else
    export MOZ_USE_XINPUT2=1
fi

# my own XDG_CONFIG_HOME remedy aliases
alias irssi="irssi --home=$XDG_CONFIG_HOME/irssi"
alias vim="vim -i $XDG_CONFIG_HOME/vim/viminfo -u $XDG_CONFIG_HOME/vim/vimrc"
alias tmux="tmux -f $XDG_CONFIG_HOME/tmux/config"

# because they're too slow, blacklist SSHFS-mounted filesystems from affecting
# the prompt
function __blacklist_sshfs_mounts() {
  sshfs_mounts=$(mount | grep sshfs | cut -d' ' -f3)
  IFS=$'\n'
  ZSH_HIGHLIGHT_DIRS_BLACKLIST=($sshfs_mounts)
  GIT_PROMPT_DIRS_BLACKLIST=($sshfs_mounts)
  unset IFS
}
__blacklist_sshfs_mounts

# now make it so this happens automatically after successful calls to sshfs
function __sshfs_then_blacklist_mounts() {
  command sshfs "$@"
  __blacklist_sshfs_mounts
}

# https://wiki.archlinux.org/title/SSH_keys#Start_ssh-agent_with_systemd_user
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"

export SSH_ALIAS_OPTIONS="-F $XDG_CONFIG_HOME/ssh/config -o UserKnownHostsFile=$XDG_CONFIG_HOME/ssh/known_hosts"
alias ssh="ssh $SSH_ALIAS_OPTIONS"
alias mosh="mosh --ssh=\"ssh $SSH_ALIAS_OPTIONS\""
alias scp="scp $SSH_ALIAS_OPTIONS"
alias sftp="sftp $SSH_ALIAS_OPTIONS"
alias sshfs="__sshfs_then_blacklist_mounts $SSH_ALIAS_OPTIONS"
export GIT_SSH_COMMAND="ssh $SSH_ALIAS_OPTIONS "$@" 2>/dev/null"

# other XDG_CONFIG_HOME remedies, courtesy <github.com/woegjiub>
export GEM_SPEC_CACHE="$XDG_CACHE_HOME/gem"
export GNUPGHOME="$XDG_CONFIG_HOME/gnupg"
# Note: gstreamer registry is usually per-arch.
# Any secondary architecture applications should have this exported to a
# different value before launch
# Thankfully, this is only needed for gstreamer0.10; 1.0 has a sane default
export GST_REGISTRY="$XDG_CACHE_HOME/gstreamer/registry-$(uname -m).bin"
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"
export HISTFILE="$XDG_DATA_HOME/bash/history"
export INPUTRC="$XDG_CONFIG_HOME/readline/inputrc"
export IPYTHONDIR="$XDG_CONFIG_HOME/ipython"
export KDEHOME="$XDG_CONFIG_HOME/kde"
export LESSHISTFILE="/dev/null"
export MYSQL_HISTFILE="$XDG_DATA_HOME/mysql/history"
export npm_config_userconfig="$XDG_CONFIG_HOME/npm/npmrc"
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/password-store"
export PENTADACTYL_INIT=":source $XDG_CONFIG_HOME/pentadactyl/pentadactylrc"
export PIP_CONFIG_FILE="$XDG_CONFIG_HOME/pip/pip.conf"
export PIP_LOG_FILE="$XDG_DATA_HOME/pip/log"
export PSQLRC="$XDG_CONFIG_HOME/psql/psqlrc"
export PSQL_HISTORY="$XDG_DATA_HOME/psql/history"
export PYLINTHOME="$XDG_DATA_HOME/pylint"
export PYLINTRC="$XDG_CONFIG_HOME/pylint/pylintrc"
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/pythonrc"
export PYTHONPYCACHEPREFIX="$XDG_CACHE_HOME/pycache"
#export RXVT_SOCKET="$XDG_RUNTIME_DIR/urxvtd.sock"
export TERMINFO="$XDG_CONFIG_HOME/terminfo"
export VAGRANT_HOME="$XDG_DATA_HOME/vagrant"
export VIMPERATOR_INIT=":source $XDG_CONFIG_HOME/vimperator/vimperatorrc"
export VIMPERATOR_RUNTIME="$XDG_CONFIG_HOME/vimperator"
#export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"

export CARGO_HOME="$XDG_DATA_HOME/cargo"

export _JAVA_AWT_WM_NONREPARENTING=1

# re-enable Chromium password autofill (requires gnome-wallet or kwallet)
export CHROMIUM_USER_FLAGS=--password-store=detect

alias ag="ag --pager='less -R' -p $XDG_CONFIG_HOME/ag/agignore"
alias mutt="mutt -F $XDG_CONFIG_HOME/mutt/muttrc"
alias ncmpcpp="ncmpcpp -c $XDG_CONFIG_HOME/ncmpcpp/config"
alias startx="startx $XDG_CONFIG_HOME/Xorg/xinitrc"
alias rtorrent="rtorrent -n -o import=$XDG_CONFIG_HOME/rtorrent/conf"
alias info='info --vi-keys'
alias weechat="weechat -d $XDG_CONFIG_HOME/weechat"

if [ "$EDITOR" != "${EDITOR#nvim}" ]; then
  export MANPAGER="$EDITOR +Man!"
  export MANWIDTH=999
fi

# pipenv should store its virtual environments locally to simplify PYTHONPATH,
# especially for vscode's python.pythonpath option
export PIPENV_VENV_IN_PROJECT=1

# the `dotnet` command-line tool in .NET Core sends data to the mothership by default. Que tiempo!
export DOTNET_CLI_TELEMETRY_OPTOUT=1

# the `brew` command-line tool in Mac OS sends data out to Google by default. kill me now
export HOMEBREW_NO_ANALYTICS=1

# wow, google is sucking its community dry again, i am totally flabbergasted
# https://git.sr.ht/~sircmpwn/dotfiles/tree/master/item/.profile
export GOPROXY=direct
export GOSUMDB=off
export GOTELEMETRY=off
export GOTOOLCHAIN=local

# Disgusting hacks
function sl3(){
	mv {$XDG_DATA_HOME/sqlite3/,~/.}sqlite_history
	sqlite3 "$@"
	mv {~/.,$XDG_DATA_HOME/sqlite3/}sqlite_history
}

# https://ntfy.readthedocs.io/en/latest/#shell-integration
export AUTO_NTFY_DONE_IGNORE="e se nvim tmux bpytop sl svm lxc_connect gap report less man gga gdc gd minicom"
