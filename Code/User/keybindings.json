[
    // ctrl+tab and ctrl+shift+tab should respect the order of tabs
    {"key": "ctrl+tab", "command": "workbench.action.nextEditorInGroup"},
    {"key": "ctrl+tab", "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"},
    {"key": "ctrl+shift+tab", "command": "workbench.action.previousEditorInGroup"},
    {"key": "ctrl+shift+tab", "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"},

    // use enter to accept completions, not tab
    {"key": "tab", "command": "-acceptSelectedSuggestion", "when": "suggestWidgetVisible && textInputFocus"},

    // use F5 to build
    {"key": "f5", "command": "workbench.action.tasks.build"},

    // terminals are disposable since TTY_USE_TMUX
    {"when": "terminalFocus", "key": "ctrl+`", "command": "workbench.action.terminal.kill"},

    // disable ctrl+q since it's too easy to press this accidentally with vi keybindings
    {"key": "ctrl+q", "command": "-workbench.action.quit"},

    // python
    {"key": "alt+p", "command": "python.datascience.showhistorypane"},

    // open settings in JSON mode by default
    {"key": "ctrl+,", "command": "workbench.action.openSettingsJson"},
    {"key": "ctrl+,", "command": "-workbench.action.openSettings"},

    // when split, use ctrl+direction to focus an adjacent editor
    {"key": "down", "command": "workbench.action.focusBelowGroup", "when": "textInputFocus"},
    {"key": "ctrl+down", "command": "-scrollLineDown", "when": "textInputFocus"},
    {"key": "up", "command": "workbench.action.focusAboveGroup", "when": "textInputFocus"},
    {"key": "ctrl+up", "command": "-scrollLineUp", "when": "textInputFocus"},
    {"key": "left", "command": "workbench.action.focusLeftGroup", "when": "textInputFocus"},
    {"key": "ctrl+left", "command": "-cursorWordStartLeft", "when": "textInputFocus"},
    {"key": "right", "command": "workbench.action.focusRightGroup", "when": "textInputFocus"},
    {"key": "ctrl+right", "command": "-cursorWordEndRight", "when": "textInputFocus"},

    // sidebar shortcuts should also toggle sidebar visibility
    {"key": "ctrl+shift+e", "command": "workbench.action.toggleSidebarVisibility", "when": "explorerViewletFocus"},
    {"key": "ctrl+shift+f", "command": "workbench.action.toggleSidebarVisibility", "when": "searchViewletFocus"},

    // use vim next/previous suggestion bindings in quick open menu
    {"key": "ctrl+p", "command": "-workbench.action.quickOpenNavigateNextInFilePicker", "when": "inFilesPicker && inQuickOpen"},
    {"key": "ctrl+e", "command": "-workbench.action.quickOpenNavigateNextInFilePicker", "when": "inFilesPicker && inQuickOpen"},
    {"key": "ctrl+shift+e", "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker", "when": "inFilesPicker && inQuickOpen"},
    {"key": "ctrl+shift+p", "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker", "when": "inFilesPicker && inQuickOpen"},
    {"key": "ctrl+n", "command": "workbench.action.quickOpenNavigateNextInFilePicker", "when": "inFilesPicker && inQuickOpen"},
    {"key": "ctrl+p", "command": "workbench.action.quickOpenNavigatePreviousInFilePicker", "when": "inFilesPicker && inQuickOpen"},

    // new settings added by GUI
    {},
]
